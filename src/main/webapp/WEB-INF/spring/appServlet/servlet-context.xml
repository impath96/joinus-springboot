<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<context:property-placeholder location="classpath:kakao.properties, classpath:google.properties"/>
	<!-- oauth2 login  -->
	<beans:bean id="kakaoClientId" class="java.lang.String">
		<beans:constructor-arg
			value="${oauth.kakao.clientId}" />
	</beans:bean>
	<beans:bean id="kakaoClientSecret" class="java.lang.String">
		<beans:constructor-arg
			value="${oauth.kakao.clientSecret}" />
	</beans:bean>
	<beans:bean id="KakaoRedirectUrl" class="java.lang.String">
		<beans:constructor-arg
			value="${oauth.kakao.redirectUrl}" />
	</beans:bean>

	<beans:bean id="kakaoAuthInfo"
		class="com.joinus.auth.AuthInfo"
		name="kakaoAuthInfo">
		<beans:constructor-arg value="kakao" />
		<beans:constructor-arg ref="kakaoClientId" />
		<beans:constructor-arg ref="kakaoClientSecret" />
		<beans:constructor-arg ref="KakaoRedirectUrl" />
	</beans:bean>

	<beans:bean id="googleClientID" class="java.lang.String">
		<beans:constructor-arg
			value="${oauth.google.clientId}" />
	</beans:bean>
	<beans:bean id="googleClientSecret" class="java.lang.String">
		<beans:constructor-arg
			value="${oauth.google.clientSecret}" />
	</beans:bean>
	<beans:bean id="googleRedirectUrl" class="java.lang.String">
		<beans:constructor-arg
			value="${oauth.google.redirectUrl}" />
	</beans:bean>

	<beans:bean id="googleAuthInfo"
		class="com.joinus.auth.AuthInfo"
		name="googleAuthInfo" >
		<beans:constructor-arg value="google" />
		<beans:constructor-arg ref="googleClientID" />
		<beans:constructor-arg ref="googleClientSecret" />
		<beans:constructor-arg ref="googleRedirectUrl" />
	</beans:bean>
	<!-- fileUpload Multipart -->
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760" />
	</beans:bean>
	<context:component-scan
		base-package="com.joinus.controller" />
</beans:beans>
